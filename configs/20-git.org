#+title: Git configuration
#+author: Gábor Udvari

* Git config

Place the config in the ~XDG_CONFIG_HOME~ folder.

#+begin_src text :noweb yes :exports none :mkdirp yes :tangle home/.config/git/config
  <<gitconfig>>
#+end_src

#+begin_src text :noweb-ref gitconfig
  [init]
    defaultBranch = main

  [core]
    quotepath = off
    autocrlf = input

  [pull]
    ff = only

  [url "https://github.com/"]
	  insteadOf = git://github.com/

  ; Include for all repositories inside the Personal folder.
  [includeIf "gitdir:~/Repositories/Personal/"]
    path = ~/.config/git/personal-config

  ; Include for all repositories inside the Work folder.
  ; Note: this config file might not exist, usually a separate work
  ; related repository will create it. Git will not throw any errors,
  ; if this file does not exist.
  [includeIf "gitdir:~/Repositories/Work/"]
    path = ~/.config/git/work-config
#+end_src

#+begin_src :exports none :mkdirp yes :tangle home/.config/git/personal-config
  [user]
    email = gabor.udvari@gmail.com
    name = Gábor Udvari
#+end_src

** Git credential helper

The official Git repository has a credential helper called netrc:

https://github.com/git/git/blob/master/contrib/credential/netrc/git-credential-netrc.perl

The Git for Windows installation comes with a broken Perl installation, and you cannot install the required Perl module Git on it. So on Windows we need to stick with the manager credential helper, but everywhere else netrc.perl should work.

On Linux you can issue the following commands to get the ~git-credential-netrc.perl~ helper working:

#+begin_src bash
  curl --output-directory ~/.local/bin -O https://raw.githubusercontent.com/git/git/refs/heads/master/contrib/credential/netrc/git-credential-netrc.perl
  chmod u+x ~/.local/bin/git-credential-netrc.perl
  cpan Git local::lib
#+end_src

To troubleshoot any issues you can add the extra ~-d~ flag for debug and the ~-v~ flag for verbose, eg.:

#+begin_src bash
  git config credential.helper "netrc.perl -d -v"
#+end_src

*** Configuration on Windows

#+begin_src text :tangle (if (eq system-type 'windows-nt) "home/.config/git/config" "no")
  [credential]
    helper = manager
#+end_src

*** Configuration on any other OS

#+begin_src text :tangle (if (eq system-type 'windows-nt) "no" "home/.config/git/config")
  [credential]
    helper = netrc.perl
#+end_src

* Guix

** Packages

#+begin_src scheme :noweb-ref guix-home
  (use-modules (gnu packages version-control)
               (gnu packages haskell-apps))

  (define %home-packages
    (append %home-packages
            (list git
                  git-annex)))
#+end_src

** Config linking service

Guix service for linking the git config file:

#+BEGIN_SRC scheme :noweb-ref guix-home
  (define %home-services
    (append %home-services
            (list
             (simple-service 'gitconfig-symlinking-service
                             home-files-service-type
                             `(
                               (".config/git/config"
                                ,(local-file "home/.config/git/config" "gitconfig"))
                               (".config/git/personal-config"
                                ,(local-file "home/.config/git/personal-config" "gitconfig-personal")))))))
#+END_SRC
